
package cl.imperial.autorizadorventa.ws;

import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.3.2
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "AutorizadorVentaWebService", targetNamespace = "http://ws.autorizadorventa.imperial.cl/autorizadorventa", wsdlLocation = "AutorizadorVentaWebService.wsdl")
public class AutorizadorVentaWebService
    extends Service
{

    private final static URL AUTORIZADORVENTAWEBSERVICE_WSDL_LOCATION;
    private final static WebServiceException AUTORIZADORVENTAWEBSERVICE_EXCEPTION;
    private final static QName AUTORIZADORVENTAWEBSERVICE_QNAME = new QName("http://ws.autorizadorventa.imperial.cl/autorizadorventa", "AutorizadorVentaWebService");

    static {
        AUTORIZADORVENTAWEBSERVICE_WSDL_LOCATION = cl.imperial.autorizadorventa.ws.AutorizadorVentaWebService.class.getResource("AutorizadorVentaWebService.wsdl");
        WebServiceException e = null;
        if (AUTORIZADORVENTAWEBSERVICE_WSDL_LOCATION == null) {
            e = new WebServiceException("Cannot find 'AutorizadorVentaWebService.wsdl' wsdl. Place the resource correctly in the classpath.");
        }
        AUTORIZADORVENTAWEBSERVICE_EXCEPTION = e;
    }

    public AutorizadorVentaWebService() {
        super(__getWsdlLocation(), AUTORIZADORVENTAWEBSERVICE_QNAME);
    }

    public AutorizadorVentaWebService(WebServiceFeature... features) {
        super(__getWsdlLocation(), AUTORIZADORVENTAWEBSERVICE_QNAME, features);
    }

    public AutorizadorVentaWebService(URL wsdlLocation) {
        super(wsdlLocation, AUTORIZADORVENTAWEBSERVICE_QNAME);
    }

    public AutorizadorVentaWebService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, AUTORIZADORVENTAWEBSERVICE_QNAME, features);
    }

    public AutorizadorVentaWebService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public AutorizadorVentaWebService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns AutorizadorVentaWeb
     */
    @WebEndpoint(name = "AutorizadorVentaWebPort")
    public AutorizadorVentaWeb getAutorizadorVentaWebPort() {
        return super.getPort(new QName("http://ws.autorizadorventa.imperial.cl/autorizadorventa", "AutorizadorVentaWebPort"), AutorizadorVentaWeb.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns AutorizadorVentaWeb
     */
    @WebEndpoint(name = "AutorizadorVentaWebPort")
    public AutorizadorVentaWeb getAutorizadorVentaWebPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://ws.autorizadorventa.imperial.cl/autorizadorventa", "AutorizadorVentaWebPort"), AutorizadorVentaWeb.class, features);
    }

    private static URL __getWsdlLocation() {
        if (AUTORIZADORVENTAWEBSERVICE_EXCEPTION!= null) {
            throw AUTORIZADORVENTAWEBSERVICE_EXCEPTION;
        }
        return AUTORIZADORVENTAWEBSERVICE_WSDL_LOCATION;
    }

}
